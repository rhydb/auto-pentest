import ipaddress
import socket

from scapy.all import Raw, StreamSocket
from core.modules import Exploit, Option
from core.reports import Report

class Module(Exploit):
    desc = "Discovers Modbus on hosts"
    options = {
            "RHOST": Option(None, True, "Remote host", type=ipaddress.ip_address),
            "PORT": Option(502, True, "Port to scan for Modbus", type=int)
            }

    hosts = []

    severity = 5

    def exploit(self):
        print("exploiting")
        self.hosts = []

        rhost = str(self.get_option("RHOST"))
        port = self.get_option("PORT")

        if self.connect(rhost, port):
            print("Modbus active:", rhost + ":" + str(port))
            self.hosts.append([rhost, port])

    def write_report(self, report: Report):
        mitigation = [
                "Implement a firewall",
                "Use a VPN to encrypt communication across networks",
                "Isolate the Modbus network"
                ]

        _ = report\
                .heading("Modbus host discovery")\
                .paragraph("Severity: " + str(self.severity))\
                .paragraph(self.desc)\
                .paragraph("Mitigation strategies:")\
                .list(mitigation)\
                .table(["Host", "Port"], self.hosts)

    def connect(self, rhost, port):
        with socket.socket() as s:
            try:
                s.connect((rhost, port))
            except ConnectionRefusedError:
                print("connection refused")
                return False

            con = StreamSocket(s, Raw)

            if con:
                return True

            return False

